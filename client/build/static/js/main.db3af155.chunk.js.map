{"version":3,"sources":["components/profile.component.js","components/login.component.js","components/create-user.component.js","components/search.component.js","components/rating.component.js","components/movie-details.component.js","components/recommendation.component.js","components/navbar.component.js","App.js","serviceWorker.js","index.js"],"names":["ProfileComponent","userData","setUserData","useState","isLoading","setIsLoading","history","useHistory","useEffect","async","response","axios","get","headers","Authorization","concat","localStorage","getItem","data","error","console","push","fetchUserData","React","createElement","className","Fragment","name","email","Button","variant","onClick","handleLogout","removeItem","LoginComponent","isLoggedIn","setIsLoggedIn","setEmail","password","setPassword","alert","Form","onSubmit","e","preventDefault","post","then","res","setItem","token","catch","err","Group","controlId","Label","Control","type","value","onChange","target","size","block","CreateUserComponent","_ref","onSwitchMode","setName","log","SearchComponent","term","setTerm","results","setResults","placeholder","map","movie","key","_id","onResultClick","movieId","style","cursor","title","Rating","onRate","rating","setRating","validRatingRange","ratingButtons","Array","from","length","_","i","num","handleRatingSubmission","disabled","MovieDetailsComponent","id","useParams","movieDetails","setMovieDetails","userRating","setUserRating","fetchMovieDetails","plot","fullplot","genres","join","runtime","cast","languages","released","Date","toLocaleDateString","directors","writers","awards","wins","nominations","year","imdb","votes","countries","tomatoes","viewer","num_mflix_comments","RecommendationComponent","setMovie","fetchMovie","url","overview","poster_path","src","alt","NavigationBar","Navbar","bg","Container","Brand","as","Link","to","Nav","App","Router","Switch","Route","exact","path","component","Search","render","Redirect","Boolean","window","location","hostname","match","container","document","getElementById","createRoot","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.db3af155.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nconst ProfileComponent = () => {\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/profile/current', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setUserData(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        history.push('/login'); // Redirect to login on error\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUserData();\n  }, [history]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    history.push('/login');\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-wrapper\">\n      <h1>User Profile</h1>\n      {userData ? (\n        <>\n          <p>Name: {userData.name}</p>\n          <p>Email: {userData.email}</p>\n          <Button variant=\"danger\" onClick={handleLogout}>Logout</Button>\n        </>\n      ) : (\n        <p>User data not found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileComponent;\n","import React, { useState,useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginComponent = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    setIsLoggedIn(!!localStorage.getItem('token'));\n    // Redirect to the profile page if the user is logged in\n    if (isLoggedIn) {\n      history.push('/profile');\n      // Show an alert to notify the user\n      alert('You are already logged in. Redirecting to your profile.');\n    }\n  }, [isLoggedIn, history]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:4000/users/login', { email, password })\n      .then(res => {\n        localStorage.setItem('token', res.data.token);\n        history.push('/profile');\n      })\n      .catch(err => {\n        console.error('Error:', err);\n      });\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"Email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"Password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\n          Login\n        </Button>\n       \n      </Form>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","import React, { useState,useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst CreateUserComponent = ({ onSwitchMode}) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory(); // Get the history object\n\n  useEffect(() => {\n    setIsLoggedIn(!!localStorage.getItem('token'));\n  \n    \n\n    // Redirect to the profile page if the user is logged in\n    if (isLoggedIn) {\n      history.push('/profile');\n      // Show an alert to notify the user\n      alert('You are already logged in. Redirecting to your profile.');\n    }\n  }, [isLoggedIn, history]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:4000/users/create-user', { name, email, password })\n      .then(res => {\n        console.log('User created:', res.data);\n        onSwitchMode(); // Switch to login mode after user creation\n        \n      })\n      .catch(err => {\n        console.error('Error:', err);\n      });\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"Email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"Password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\n          Create User\n        </Button>\n       \n      </Form>\n    </div>\n  );\n};\n\nexport default CreateUserComponent;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom'; // Import useHistory\n\nconst SearchComponent = () => {\n  const [term, setTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const history = useHistory(); // Initialize useHistory\n\n  const onSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/search?term=${term}`);\n      setResults(response.data);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      // Handle error\n    }\n  };\n\n  // New function to handle clicking on a search result\n  const onResultClick = (movieId) => {\n    console.log(movieId)\n    history.push(`/movies/details/${movieId}`); // Redirect to the movie details page\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={term}\n        onChange={(e) => setTerm(e.target.value)}\n        placeholder=\"Search for a movie...\"\n      />\n      <button onClick={onSearch}>Search</button>\n      <ul>\n        {results.map((movie) => (\n          // Update the list item to be clickable\n          <li key={movie._id} onClick={() => onResultClick(movie._id)} style={{ cursor: 'pointer' }}>\n            {movie.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchComponent;\n","import React, { useState } from 'react';\n\nconst Rating = ({ onRate, movie }) => {\n  const [rating, setRating] = useState(0);\n  const validRatingRange = { min: 1, max: 10 };\n\n  // Create an array of buttons for ratings 1 through 10\n  const ratingButtons = Array.from({ length: validRatingRange.max }, (_, i) => i + 1).map((num) => (\n    <button\n      key={num}\n      className={`rating-button ${rating === num ? 'selected' : ''}`}\n      onClick={() => setRating(num)}\n    >\n      {num}\n    </button>\n  ));\n\n  // Handle the rating submission\n  const handleRatingSubmission = () => {\n    // Check if the rating is within the valid range\n    if (rating >= validRatingRange.min && rating <= validRatingRange.max) {\n      onRate(movie?._id, rating);\n    } else {\n      console.error(`Rating is out of bounds: ${rating}`);\n      // Optionally, display an error message to the user\n    }\n  };\n\n  return (\n    <div>\n      <h3>{movie?.title || 'Movie Title'}</h3>\n      <div className=\"rating-buttons\">\n        {ratingButtons}\n      </div>\n      <button \n        onClick={handleRatingSubmission}\n        disabled={rating === 0 || !movie?._id} // Ensure movie has an _id\n      >\n        Rate Movie\n      </button>\n    </div>\n  );\n};\n\nexport default Rating;\n","// MovieDetailsComponent.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Rating from './rating.component'; // Import the Rating component\n\nconst MovieDetailsComponent = () => {\n  const { id } = useParams();  // Destructure the parameter as `id`\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [userRating, setUserRating] = useState(null); // State to store user rating\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/movies/details/${id}`);\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        // handle error\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);  // Dependency array with `id` to re-fetch if the id changes\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const handleRateMovie = async (movieId, rating) => {\n    try {\n      const response = await axios.post('http://localhost:4000/ratings', {\n        movieId: movieId,\n        rating: rating\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Movie rated successfully:', response.data);\n      setUserRating(rating); // Update the state to reflect the new rating\n    } catch (error) {\n      console.error('Error rating movie:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>{movieDetails.title}</h1>\n      <p><strong>Plot:</strong> {movieDetails.plot}</p>\n      <p><strong>Full Plot:</strong> {movieDetails.fullplot}</p>\n      <p><strong>Genres:</strong> {movieDetails.genres.join(', ')}</p>\n      <p><strong>Runtime:</strong> {movieDetails.runtime} minutes</p>\n      <p><strong>Cast:</strong> {movieDetails.cast.join(', ')}</p>\n      <p><strong>Languages:</strong> {movieDetails.languages.join(', ')}</p>\n      <p><strong>Release Date:</strong> {movieDetails.released ? new Date(movieDetails.released).toLocaleDateString() : 'N/A'}</p>\n      <p><strong>Directors:</strong> {movieDetails.directors.join(', ')}</p>\n      <p><strong>Writers:</strong> {movieDetails.writers.join(', ')}</p>\n      <p><strong>Awards:</strong> {movieDetails.awards ? `${movieDetails.awards.wins} wins, ${movieDetails.awards.nominations} nominations` : 'N/A'}</p>\n      <p><strong>Year:</strong> {movieDetails.year}</p>\n      <p><strong>IMDB:</strong> {movieDetails.imdb ? `Rating: ${movieDetails.imdb.rating}, Votes: ${movieDetails.imdb.votes}` : 'N/A'}</p>\n      <p><strong>Countries:</strong> {movieDetails.countries.join(', ')}</p>\n      <p><strong>Type:</strong> {movieDetails.type}</p>\n      <p><strong>Rotten Tomatoes Viewer Score:</strong> {movieDetails.tomatoes && movieDetails.tomatoes.viewer ? `${movieDetails.tomatoes.viewer.rating}/10` : 'N/A'}</p>\n      <p><strong>Number of Comments:</strong> {movieDetails.num_mflix_comments}</p>\n      {/* Add more details as needed */}\n      <Rating movie={movieDetails} onRate={handleRateMovie} />\n      {userRating !== null && <p>You rated this movie: {userRating} / 10</p>}\n    </div>\n  );\n};\n\nexport default MovieDetailsComponent;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n\nconst RecommendationComponent = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const history = useHistory();\n\n    useEffect(() => {\n        setIsLoggedIn(!!localStorage.getItem('token'));\n        fetchMovie();\n    }, []);\n\n    const fetchMovie = async () => {\n        setIsLoading(true);\n        try {\n            const isLoggedIn = !!localStorage.getItem('token');\n            \n            let url;\n            if (isLoggedIn) {\n                // Fetch personalized recommendation from the server\n                url = 'http://localhost:4000/movies/recommendation';\n            } else {\n                // Fetch a random movie suggestion from the server\n                url = 'http://localhost:4000/movies/random'; // Update this URL as needed\n            }\n            const response = await axios.get(url, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            setMovie(response.data);\n            console.log(movie)\n        } catch (error) {\n            console.error('Error fetching movie:', error);\n            if (!isLoggedIn) {\n                history.push('/login');\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"recommendation-wrapper\">\n           {movie ? (\n                <div>\n                    <h1>{isLoggedIn ? 'Your Personalized Recommendation' : 'Random Movie Suggestion'}</h1>\n                    <p>Title: {movie.title}</p>\n                    <p>\n                    {isLoggedIn ? (\n                        <>\n                            Summary: {movie.overview}\n                        </>\n                    ) : (\n                        <>\n                            Summary: {movie.plot}\n                        </>\n                    )}\n                </p>\n                    {/* Display movie poster if available */}\n                    {movie.poster_path && (\n                        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={`Poster of ${movie.title}`} />\n                    )}\n                </div>\n            ) : (\n                <p>No movie data available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default RecommendationComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nconst NavigationBar = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">Movie Recommendation System</Navbar.Brand>\n        <Nav className=\"ml-auto\">\n\n          <Nav.Link as={Link} to=\"/search\">Search</Nav.Link>\n          <Nav.Link as={Link} to=\"/recommendation\">Recommendations</Nav.Link>\n          <Nav.Link as={Link} to=\"/profile\">Home</Nav.Link>\n          <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n          <Nav.Link as={Link} to=\"/create-user\">Register</Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavigationBar;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport ProfileComponent from './components/profile.component';\nimport LoginComponent from './components/login.component';\nimport CreateUserComponent from './components/create-user.component';\nimport Search from './components/search.component';\nimport MovieDetailsComponent from './components/movie-details.component';\nimport RecommendationComponent from './components/recommendation.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import the NavigationBar component\nimport NavigationBar from './components/navbar.component';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const history = useHistory(); // Assuming you are using React Router\n  \n    useEffect(() => {\n      const validateToken = (token) => {\n        // Implement token validation logic here\n      };\n  \n      const token = localStorage.getItem('token');\n      if (token && validateToken(token)) {\n        setIsLoggedIn(true);\n      } else {\n        localStorage.removeItem('token');\n        setIsLoggedIn(false);\n      }\n    }, []);\n  \n    useEffect(() => {\n      if (isLoggedIn) {\n        history.push('/profile');\n        alert('You are already logged in. Redirecting to your profile.');\n      }\n    }, [isLoggedIn, history]);\n\n    return (\n        <div className=\"App\">\n            <Router>\n                {/* Replace the old navigation logic with the NavigationBar component */}\n                <NavigationBar />\n\n                <Container>\n                    <Switch>\n                        <Route exact path=\"/\" component={Search} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <Route path=\"/create-user\" component={CreateUserComponent} />\n\n                        <Route path=\"/profile\" component={ProfileComponent} />\n                        <Route path=\"/search\" component={Search} />\n                        <Route path=\"/recommendation\" component={RecommendationComponent} />\n                        <Route path=\"/movies/details/:id\" component={MovieDetailsComponent} />\n                        <Route render={() => <Redirect to=\"/\" />} />\n                    </Switch>\n                </Container>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n// To learn more about the benefits of this model and instructions on how to\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: {\n                'Service-Worker': 'script'\n            },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container); // create the root\n\nroot.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}